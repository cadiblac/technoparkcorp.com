<?xml version="1.0"?>
<!--
 *
 * Copyright (c) 2008, TechnoPark Corp., Florida, USA
 * All rights reserved. THIS IS PRIVATE SOFTWARE.
 *
 * Redistribution and use in source and binary forms, with or without modification, are PROHIBITED
 * without prior written permission from the author. This product may NOT be used anywhere
 * and on any computer except the server platform of TechnoPark Corp. located at
 * www.technoparkcorp.com. If you received this code accidentally and without intent to use
 * it, please report this incident to the author by email: privacy@technoparkcorp.com or
 * by mail: 568 Ninth Street South 202 Naples, Florida 34102, the United States of America,
 * tel. +1 (239) 243 0206, fax +1 (239) 236-0738.
 *
-->

<article>

<categories>

	<category>Continuous Integration</category>
	<category>Automated Builds</category>
	<category>Deployment</category>

</categories>

<title>Customizing of Poker room project through establishment of automatic 
building and deployment environment for multi-parts project</title>
<label></label>
<intro></intro>
<next></next>
<invisible/>

<description>

	Several functional parts of third-party software with a specific 
	deployment procedure produced great integration management problems 
	during the customizing of a poker room project with the specific needs of a particular 
	customer. We solved this problem by implementing an automatic 
	building and deployment environment.

</description>

<tex>

	Poker-room is a multi player system for playing in different kinds of poker 
	throughout the Internet. Poker-room is third-party software for us and 
	additionally has very complex undocumented architecture with 
	approximately 100 classes and 100 000 strings of source code. So it is 
	a type of "black box" for us. Every new customizing order for poker 
	room software needed 50-60 hours to change, recompile and 
	integrate the multi-parts poker room project with the great risk of failure 
	and unexpected errors. The customizing procedure was also worsened by long 
	and undocumented deployment activity for each project component.  All 
	of the aforementioned problems led to great risk of failed customizing and lost money and time. 

	The obvious decision for poker-room was architecture description, but our prelimnary estimation stated it would take us up to 500 hours. So we 
	decided to organize for all participants' integration environment. 
	Our main goals were to reduce the cost of the integration work for deployment of 
	the multi-parts project on a target customer server. We used Apache Continuum 
	on a Windows server, R2build system and shell programs were developed for 
	automation of the building and deployment stages. All components were 
	adjusted and integrated for one time. We spent 400 hours, but it 
	was a one time cost. After this when we obtain a system, it is not dependent 
	on programmers and system administrators.

	All that is needed from programmers is to commit source code on a subversion 
	server. The system administrator only has to put down the server 
	parameters and then the system will go through all the building and deploying 
	steps by itself while logging all errors and unplanned conditions. Now it 
	takes about 2 hours for integration with the Windows exe servers, 1 hours to 
	deploy the database structure with all stored procedures (on running MS SQL 
	server) and PHP admin panel on Windows platform. Considered deployment 
	automation allowed us to successfully execute many customizing projects for 
	poker room software.

	This approach dramatically reduces many risks and simplifies integration 
	management work under "black box" software as well as allows us to 
	organize daily building for such third-party source code projects.

</tex>

</article>

