<?xml version="1.0"?>
<!--
 *
 * Copyright (c) 2008, TechnoPark Corp., Florida, USA
 * All rights reserved. THIS IS PRIVATE SOFTWARE.
 *
 * Redistribution and use in source and binary forms, with or without modification, are PROHIBITED
 * without prior written permission from the author. This product may NOT be used anywhere
 * and on any computer except the server platform of TechnoPark Corp. located at
 * www.technoparkcorp.com. If you received this code occacionally and without intent to use
 * it, please report this incident to the author by email: privacy@technoparkcorp.com or
 * by mail: 568 Ninth Street South 202 Naples, Florida 34102, the United States of America,
 * tel. +1 (239) 243 0206, fax +1 (239) 236-0738.
 *
 * @author Yegor Bugaenko <egor@technoparkcorp.com>
 * @copyright Copyright (c) TechnoPark Corp., 2001-2009
 * @version $Id$
 *
-->

<article>

<term>quality</term>

<title>How much we pay for quality</title>
<label>Cost of Quality</label>
<intro>Learn how much quality effects the total Budget</intro>
<next>process/cost/budget</next>

<description>
</description>

<keywords>
</keywords>

<text>

	<p><a href="${url:process/quality}">Quality</a> is what costs us money and what you pay for. Quality is measured
	as amount of defect-free functionality related to defective functionality. Quality
	is measured in percentages. Our contract says that 95% is acceptable Quality.</p>

	<p>A <a href="${url:process/quality/defect}">Defect</a> is a non-conformity of 
	<a href="${url:process/warranty/deliverables}">Deliverables</a> 
	to <a href="${url:process/scope/specification}">Specification</a>. In other words, the
	software product does not work as specified. Defects shall be revealed by the project
	team before software product is delivered to you.</p>

	<p>While you and end-users perceive Defects through software interfaces, the majority
	of Defects do not reside in software itself. This is where Defects normally lie (in order of 
	severity):</p>

	<ol>
		<li>Software development contract</li>
		<li><a href="${url:process/scope/vision}">Vision</a></li>
		<li><a href="${url:process/scope/srs}">SRS</a></li>
		<li><a href="${url:process/risk/risklist}">Risk List</a></li>
		<li><a href="${url:process/time/schedule}">Schedule</a> and <a href="${url:process/time/iteration}">Iteration</a> Plans</li>
		<li>Architecture</li>
		<li>Design</li>
		<li>Software code</li>
		<li>Test Plan</li>
	</ol>

	<p>Software code itself is one of the least critical components in the total Cost Of Quality
	structure. Defects in software code are the least expensive to remove.</p>

	<p>There are a number of prevention methods we use in order to reveal and remove Defects before they
	become critical or fatal.</p>

	<ul>
		<li><a href="${url:process/quality/peerreview}">Peer reviews</a> of SRS, Schedule, Risk List and architecture</li>
		<li>Prototyping on early Iterations</li>
		<li>Strict guidelines and manuals for analysts and architects</li>
		<li>Industry standards and formats (UML, IEEE, ISO, RUP, XML, etc.)</li>
		<li>Periodical Quality Assurance (QA) audits</li>
	</ul>

	<p>All prevention methods are used before <a href="${url:process/quality/unit}">unit-testing</a>, 
	<a href="${url:process/quality/system}">system testing</a> and 
	<a href="${url:process/quality/manual}">manual testing</a>.  
	Prevention methods are performed by programmers and testers when software is being implemented.</p>

</text>

<concepts>
	<c1 name="process/quality/defect">Defects decrease quality and increase cost of quality</c1>
	<c2 name="process/communication/incremental">Incremental delivery simplifies the process of quality improvement</c2>
	<c3 name="process/risk">Quality is improved by proper risk management in early stages of a project</c3>
</concepts>

</article>


