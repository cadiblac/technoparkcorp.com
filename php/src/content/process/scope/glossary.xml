<?xml version="1.0"?>
<!--
 *
 * Copyright (c) 2008, TechnoPark Corp., Florida, USA
 * All rights reserved. THIS IS PRIVATE SOFTWARE.
 *
 * Redistribution and use in source and binary forms, with or without modification, are PROHIBITED
 * without prior written permission from the author. This product may NOT be used anywhere
 * and on any computer except the server platform of TechnoPark Corp. located at
 * www.technoparkcorp.com. If you received this code occacionally and without intent to use
 * it, please report this incident to the author by email: privacy@technoparkcorp.com or
 * by mail: 568 Ninth Street South 202 Naples, Florida 34102, the United States of America,
 * tel. +1 (239) 243 0206, fax +1 (239) 236-0738.
 *
 * @author Yegor Bugayenko <egor@tpc2.com>
 * @copyright Copyright (c) TechnoPark Corp., 2001-2009
 * @version $Id$
 *
-->

<article>

<term>scope</term>

<title>Shared vision of the system</title>
<label>Glossary</label>
<intro>Learn more about Glossary used to define terms in every project</intro>
<next>process/scope/vision</next>

<description>
    Glossary is a global dictionary in the project and a data model
</description>

<keywords>
    glossary,
    data model,
    common dictionary,
    scope definition,
    scope specification
</keywords>

<text>

    <p>There are hundreds of <a href="${url:process/scope/requirement}">Requirements</a> in mid-size and small software
    products.  
    All Requirements are defined in a textual format based on the terms from the Glossary.  
    A Glossary is used in order to avoid misinterpretation
    of key terms and definitions inside the <a href="${url:process/scope/specification}">Specification</a>.</p>

    <p>Key terms, data units, and concepts are taken from Requirements and entered in the Glossary.
    This is a proven method to avoid ambiguity.</p>
    
    <p>Consider the following example of two simple functional requirements:</p>

    <table>
        <tr>
            <th style="width: 30px;">#</th>
            <th>Requirement</th>
        </tr>
        <tr><td>R1</td><td>User can send a [Request] for new account registration, 
        System shall validate provided information and create a new [Account] for the user.</td></tr>

        <tr><td>R2</td><td>User can send a [Request] for [Password] change in 
        their [Account], System shall change database records 
        for the user.</td></tr>
    </table>    

    <p>The following is an example of the Glossary terms for the Requirements shown above:</p>

    <table>
        <tr>
            <th style="width: 60px;">Term</th>
            <th>Definition</th>
            <th style="width: 60px;">Used in</th>
        </tr>
        <tr><td>[Request]</td><td>
        Web form completion and submission operation performed
        by the user. Process is completed when the 'Submit' button is clicked.
        </td>
        <td>R1, R2</td></tr>

        <tr><td>[Password]</td><td>6-20 characters connected with the user account.  It 
        must contain at least one numeric symbol and one capital letter.</td>
        <td>R2</td></tr>

        <tr><td>[Account]</td><td>Database record associated with the user, 
        includes: Login, Password, Name, Phone, and Email.</td>
        <td>R1, R2</td></tr>
    </table>

    <p>As evidenced by the example, the Glossary helps to define shared concepts of the
    system scope and work with it independently of the Requirements.</p> 
    
    <p>A Glossary is created for all projects, regardless of the project size.
    The Glossary is a section of the <a href="${url:process/scope/srs}">SRS</a>.</p>

</text>

<concepts>
    <c1 name="process/scope/requirement">Functional requirements are manipulated with terms defined in the Glossary</c1>
    <c3 name="process/scope/specification">Specifications are based on Glossary terms</c3>
    <c5 name="process/scope/srs">The first section in the SRS contains the Glossary</c5>
</concepts>

</article>



