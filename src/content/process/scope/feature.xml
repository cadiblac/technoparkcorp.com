<?xml version="1.0"?>
<!--
 *
 * Copyright (c) 2008, TechnoPark Corp., Florida, USA
 * All rights reserved. THIS IS PRIVATE SOFTWARE.
 *
 * Redistribution and use in source and binary forms, with or without modification, are PROHIBITED
 * without prior written permission from the author. This product may NOT be used anywhere
 * and on any computer except the server platform of TechnoPark Corp. located at
 * www.technoparkcorp.com. If you received this code occacionally and without intent to use
 * it, please report this incident to the author by email: privacy@technoparkcorp.com or
 * by mail: 568 Ninth Street South 202 Naples, Florida 34102, the United States of America,
 * tel. +1 (239) 243 0206, fax +1 (239) 236-0738.
 *
 * @author Yegor Bugayenko <egor@tpc2.com>
 * @copyright Copyright (c) TechnoPark Corp., 2001-2009
 * @version $Id$
 *
-->

<article>

<term>preliminaryspecification</term>

<title>Top level user requirement</title>
<label>Feature</label>
<intro>Read about Features - top-level Runctional Requirements</intro>
<next>process/scope/glossary</next>

<description>
    Feature is a top-level user requirement that represent a piece
    of functionality in the system.
</description>

<keywords>
    feature,
    product feature,
    vision,
    functional requirement,
    ROM estimate,
    continuous integration,
    software outsourcing,
    offshore development,
    distributed programming,
</keywords>

<text>

    <p>A system boundary is defined by [Requirements]({% href process/scope/requirement %}).
    A Feature is a type of high-level
    user Requirement that explains what the user wants to do with the system
    in order to satisfy their needs.</p>

    <p>A Feature describes what the user can do with the system. Features are listed in the [Vision]({% href process/scope/vision %}).</p>

    <p>Examples of Features include:</p>

    <table>
        <tr>
            <th style="width: 50px;">#</th>
            <th>Feature</th>
        </tr>
        <tr><td>FEAT1</td><td>User can manage their account, edit settings, upload photos, and exchange messages with other users.</td></tr>

        <tr><td>FEAT2</td><td>Administrator can manage users, view reports, print reports, send reports by email, and configure reporting system.</td></tr>

        <tr><td>FEAT3</td><td>Affiliate can access system database reports via XML, obtain the latest user data or statistics, and payout reports.</td></tr>
    </table>

    <p>The key difference between a Feature and a Functional Requirement is that the Feature is a
    non-formal statement.  A Feature resembles a wide and uncertain definition of functionality, while
    a Functional Requirement resembles a strict and unambiguous formula.</p>

    <p>Each Functional Requirement is traced back to a Feature in the
    [Traceability Matrix]({% href process/scope/matrix %}).</p>

</text>

<concepts>
    <c1 name="process/scope/vision">Feature is a top-level user requirement</c1>
    <c3 name="process/scope/requirement">Specification details Vision</c3>
    <c5 name="process/scope/matrix">ROM Estimate is based on Features</c5>
</concepts>

</article>



