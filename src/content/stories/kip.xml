<?xml version="1.0"?>
<!--
 *
 * Copyright (c) 2008, TechnoPark Corp., Florida, USA
 * All rights reserved. THIS IS PRIVATE SOFTWARE.
 *
 * Redistribution and use in source and binary forms, with or without modification, are PROHIBITED
 * without prior written permission from the author. This product may NOT be used anywhere
 * and on any computer except the server platform of TechnoPark Corp. located at
 * www.technoparkcorp.com. If you received this code accidentally and without intent to use
 * it, please report this incident to the author by email: privacy@technoparkcorp.com or
 * by mail: 568 Ninth Street South 202 Naples, Florida 34102, the United States of America,
 * tel. +1 (239) 243 0206, fax +1 (239) 236-0738.
 *
-->

<article>

<date>11/09/2006</date>
<categories>

    <category>Risk Management</category>
    <category>Scope Management</category>
    <category>Quality Control</category>

</categories>

<title>Clarification of Vague scope definition in MESSQ project</title>
<label>Vague scope definition</label>
<intro></intro>
<next></next>
<invisible/>

<description>

    In the long lasting project MESSQ we had a vague document, describing its 
    functionality. It did not allow us to successfully finish the project 
    because there were great risks of inconsistencies between the document and the 
    final software product. We decided to write a proper software specification 
    based on software defects from the customer's point of view.

</description>

<text class="tex">

    MESSQ project is an information corporate portal with the functions of project 
    management and corporate document circulation. It is a long-lasting 
    project with a wide scope of work. At the initial phase of the MESSQ 
    project, scope was fixed by a document called "Project Task". This document 
    had 80 pages and consisted of vague and unclear definitions.
    
    Our current principles proclaim that software requirements shall be correct, 
    unambiguous, complete, consistent, verifiable, modifiable, and 
    traceable. So the old style document became an obsolete document for scope 
    management. But when we tried to modify the MESSQ "Project Task", we found out 
    that direct transforming would take from MESSQ the cost of 100-120 hours, and 
    this was not appropriate so completing the project would be unsatisfactory.

    Our decision was to write a new software specification, which would 
    consist of requirements in the type of software "defects" for the time 
    being. In other words, specification was built from inconsistencies 
    between current the software product and the project task: one "defect" -- one 
    requirement. So we used a type of gap analysis in order to compare and 
    document actual project performance with its potential performance. 
    The main attention was paid to the customer's opinion on scope integrity. 
    Writing the new specifications cost 30 hours, which led to a cost savings of 
    70-80 hours.

    This described approach allows us to avoid risks related to vague 
    requirements and save on cost and money.  The joint work of project 
    participants became dramatically easier after establishing the new type 
    of specification. This document has 7 pages of clear and non-vague 
    requirements. Consequently, working on each requirement for the software 
    product (deliverables of MESSQ project) we met all of the customer expectations. 
    The MESSQ project was successfully finished in time and even with a budget savings.

</text>

</article>

